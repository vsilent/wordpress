##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Upstream to abstract backend connection(s) for php
upstream php {
        server 127.0.0.1:9000;
}


# ----------------------------------------------------------
# General `fastcgi` configuration
#
# Move next 4 lines to /etc/nginx/nginx.conf if you want to use fastcgi_cache across many sites
#
# @link https://rtcamp.com/wordpress-nginx/tutorials/single-site/fastcgi-cache-with-purging/#nginx-config
# ----------------------------------------------------------
fastcgi_cache_path /tmp/nginx-cache levels=1:2 keys_zone=WORDPRESS:10m inactive=60m;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_cache_use_stale error timeout invalid_header http_500;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

# ----------------------------------------------------------
# Server - both 80 and 443
# ----------------------------------------------------------
server { 
	# listens both on IPv4 and IPv6
    listen 80;
    listen [::]:80;

    # `-server name placeholder-` will be replaced by ENV variable - HOST_NAME
    server_name  .server_name_placeholder;

    index index.php index.html index.htm;

	# webroot
    root /usr/share/nginx/www;

	# Add extra http header to responses to indicate caching status (HIT, MISS, BYPASS)
	add_header X-Cache-Status $upstream_cache_status;

	# By default, it does NOT skip the cache.
    set $skip_cache 0;
    # POST requests and urls with a query string should always go to PHP, instead of the cache.
    if ($request_method = POST) {
        # Skip the cache.
		set $skip_cache 1;
    }
    if ($query_string != "") {
		set $skip_cache 1;
    }

    # Don't cache uris containing the following segments
    if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
		set $skip_cache 1;
    }

    # Don't use the cache for logged in users or recent commenters
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
		set $skip_cache 1;
    }

	## ---- Load `restrictions` configuration
    include restrictions.conf;

	location / {
		try_files $uri $uri/ /index.php?$args;
		proxy_read_timeout 300;
	}

	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root /usr/share/nginx/www;
	}

	# Use zone `wpsearch` to limit the **WP search** request freqency.
	# `wpsearch` is defined in `nginx.conf`.
	#
	# @link http://kbeezie.com/securing-nginx-php/2/
    location /search {
        limit_req zone=wpsearch burst=3 nodelay;
        try_files $uri /index.php;
    }

	# Assign "max" lifetime to static files.
    location ~* \.(ico|css|js|gif|jpe?g|png)$ {
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

	#
	location ~ \.php$ {
        try_files $uri =404;

		# limit the **# of connections** to 5
        limit_conn phplimit 5;

		fastcgi_pass php;
		fastcgi_index index.php;
		include fastcgi_params;

		# FIX - "upstream timed out (110: Connection timed out) while reading response header from upstream".
		# Assign it as a "big" number.
		#
		# @link http://www.kpsolution.com/tips/nginx-php-fcgi-upstream-timed-out-110-connection-timed-out-while-reading-response-header/149/
		fastcgi_read_timeout 150s;

        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;

        fastcgi_cache WORDPRESS;
        fastcgi_cache_valid  60m;
	}

	location ~ /purge(/.*) {
		# Only allow internal access.
        allow              127.0.0.1;
        deny               all;
        fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1";
	}
}


